{-# LANGUAGE UndecidableInstances #-}
{-|
Module      : Cucumber
Description : Cucumber testing for daml

Copyright   : (c) Obsidian Systems LLC, 2024
License     : BSD-3-Clause
Maintainer  : maintainer@obsidian.systems

Support library for daml-cucumber. Use this library to implement
cucumber/gherkin steps in daml, and use the daml-cucumber tool to run them.
-}

module Cucumber
  ( module Cucumber
  , module LiftScript
  , module StateT
  , module Default
  ) where

import DA.Action.State.Class
import DA.Exception
import Daml.Script
import Default
import LiftScript
import StateT

newtype Cucumber s a = Cucumber
  { unCucumber : StateT s Script a
  }
 deriving (
  Functor,
  Applicative,
  Action,
  ActionState s,
  ActionFail,
  CanAssert,
  CanAbort,
  ActionCatch,
  ActionThrow)

instance LiftScript (Cucumber s) where
  liftScript = Cucumber . liftScript

instance HasTime (Cucumber s) where
  getTime = liftScript getTime

runCucumber : Default s => Cucumber s a -> Script a
runCucumber = fmap fst . runState def . unCucumber
